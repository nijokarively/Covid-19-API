{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-card_5-md.entry.js"],"names":[],"mappings":"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","sourcesContent":["import { r as registerInstance, h, c as getIonMode, H as Host } from './core-0a8d4d2e.js';\nimport './config-3c7f3790.js';\nimport { o as openURL, c as createColorClasses } from './theme-18cbe2cc.js';\n\nconst Card = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * If `true`, a button tag will be rendered and the card will be tappable.\n         */\n        this.button = false;\n        /**\n         * The type of the button. Only used when an `onclick` or `button` property is present.\n         */\n        this.type = 'button';\n        /**\n         * If `true`, the user cannot interact with the card.\n         */\n        this.disabled = false;\n        /**\n         * When using a router, it specifies the transition direction when navigating to\n         * another page using `href`.\n         */\n        this.routerDirection = 'forward';\n    }\n    isClickable() {\n        return (this.href !== undefined || this.button);\n    }\n    renderCard(mode) {\n        const clickable = this.isClickable();\n        if (!clickable) {\n            return [\n                h(\"slot\", null)\n            ];\n        }\n        const { href, routerDirection } = this;\n        const TagType = clickable ? (href === undefined ? 'button' : 'a') : 'div';\n        const attrs = (TagType === 'button')\n            ? { type: this.type }\n            : {\n                download: this.download,\n                href: this.href,\n                rel: this.rel,\n                target: this.target\n            };\n        return (h(TagType, Object.assign({}, attrs, { class: \"card-native\", disabled: this.disabled, onClick: (ev) => openURL(href, ev, routerDirection) }), h(\"slot\", null), clickable && mode === 'md' && h(\"ion-ripple-effect\", null)));\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { class: Object.assign(Object.assign({ [mode]: true }, createColorClasses(this.color)), { 'card-disabled': this.disabled, 'ion-activatable': this.isClickable() }) }, this.renderCard(mode)));\n    }\n    static get style() { return \":host{--ion-safe-area-left:0px;--ion-safe-area-right:0px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:block;position:relative;background:var(--background);color:var(--color);font-family:var(--ion-font-family,inherit);overflow:hidden}:host(.ion-color){background:var(--ion-color-base);color:var(--ion-color-contrast)}:host(.card-disabled){cursor:default;opacity:.3;pointer-events:none}.card-native{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;display:block;width:100%;min-height:var(--min-height);-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);outline:none;background:inherit}.card-native::-moz-focus-inner{border:0}a,button{cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-user-drag:none}ion-ripple-effect{color:var(--ripple-color)}:host{--background:var(--ion-item-background,var(--ion-background-color,#fff));--color:var(--ion-color-step-550,#737373);margin-left:10px;margin-right:10px;margin-top:10px;margin-bottom:10px;border-radius:4px;font-size:14px;-webkit-box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12);box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host{margin-left:unset;margin-right:unset;-webkit-margin-start:10px;margin-inline-start:10px;-webkit-margin-end:10px;margin-inline-end:10px}}\"; }\n};\n\nconst CardContent = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { class: {\n                [mode]: true,\n                // Used internally for styling\n                [`card-content-${mode}`]: true\n            } }));\n    }\n    static get style() { return \"ion-card-content{display:block;position:relative}.card-content-md{padding-left:16px;padding-right:16px;padding-top:13px;padding-bottom:13px;font-size:14px;line-height:1.5}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.card-content-md{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}.card-content-md h1{margin-left:0;margin-right:0;margin-top:0;margin-bottom:2px;font-size:24px;font-weight:400}.card-content-md h2{margin-left:0;margin-right:0;margin-top:2px;margin-bottom:2px;font-size:16px;font-weight:400}.card-content-md h3,.card-content-md h4,.card-content-md h5,.card-content-md h6{margin-left:0;margin-right:0;margin-top:2px;margin-bottom:2px;font-size:14px;font-weight:400}.card-content-md p{margin-left:0;margin-right:0;margin-top:0;margin-bottom:2px;font-size:14px;font-weight:400;line-height:1.5}ion-card-header+.card-content-md{padding-top:0}\"; }\n};\n\nconst CardHeader = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * If `true`, the card header will be translucent.\n         * Only applies when the mode is `\"ios\"` and the device supports\n         * [`backdrop-filter`](https://developer.mozilla.org/en-US/docs/Web/CSS/backdrop-filter#Browser_compatibility).\n         */\n        this.translucent = false;\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { class: Object.assign(Object.assign({}, createColorClasses(this.color)), { 'card-header-translucent': this.translucent, 'ion-inherit-color': true, [mode]: true }) }, h(\"slot\", null)));\n    }\n    static get style() { return \":host{--background:transparent;--color:inherit;display:block;position:relative;background:var(--background);color:var(--color)}:host(.ion-color){background:var(--ion-color-base);color:var(--ion-color-contrast)}:host{padding-left:16px;padding-right:16px;padding-top:16px;padding-bottom:16px}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}::slotted(ion-card-subtitle:not(:first-child)),::slotted(ion-card-title:not(:first-child)){margin-top:8px}\"; }\n};\n\nconst CardSubtitle = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { role: \"heading\", \"aria-level\": \"3\", class: Object.assign(Object.assign({}, createColorClasses(this.color)), { 'ion-inherit-color': true, [mode]: true }) }, h(\"slot\", null)));\n    }\n    static get style() { return \":host{display:block;position:relative;color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}:host{--color:var(--ion-color-step-550,#737373);margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;font-size:14px;font-weight:500}\"; }\n};\n\nconst CardTitle = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { role: \"heading\", \"aria-level\": \"2\", class: Object.assign(Object.assign({}, createColorClasses(this.color)), { 'ion-inherit-color': true, [mode]: true }) }, h(\"slot\", null)));\n    }\n    static get style() { return \":host{display:block;position:relative;color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}:host{--color:var(--ion-color-step-850,#262626);margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;font-size:20px;font-weight:500;line-height:1.2}\"; }\n};\n\nexport { Card as ion_card, CardContent as ion_card_content, CardHeader as ion_card_header, CardSubtitle as ion_card_subtitle, CardTitle as ion_card_title };\n"],"sourceRoot":"webpack:///","file":"15-es5.js"}