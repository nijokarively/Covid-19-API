{"version":3,"sources":["./src/app/regions/regions.page.html","./src/app/regions/regions.module.ts","./src/app/regions/regions.page.scss","./src/app/regions/regions.page.ts"],"names":[],"mappings":"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","file":"regions-regions-module-es2015.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button [text]=\\\"'Countries'\\\" [icon]=\\\"buttonIcon\\\">\\n      </ion-back-button>\\n    </ion-buttons>\\n    <ion-title>\\n      COVID-19 by Region\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-toolbar>\\n  <ion-searchbar [(ngModel)]=\\\"searchRegion\\\" autocomplete=\\\"off\\\"></ion-searchbar>\\n</ion-toolbar>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\n    <ion-refresher-content></ion-refresher-content>\\n  </ion-refresher>\\n\\n  <ion-list *ngFor=\\\"let region of regions | filter:searchRegion\\\">\\n    <ion-card lines=\\\"none\\\" class=\\\"ion-no-padding\\\">\\n      <ion-card-header>\\n        <ion-card-title>\\n          {{region.region}}\\n        </ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <ion-avatar *ngIf=\\\"region.flag\\\" style=\\\"float: left; margin-right:2.5em;  margin-bottom:1em;\\\" slot=\\\"start\\\">\\n          <img src=\\\"../assets/flags-regions/{{region.flag}}.svg\\\" />\\n        </ion-avatar>\\n        <ion-label>\\n          <br>\\n          <p style=\\\"overflow: hidden;\\\">\\n            Cases: {{region.cases | number}}\\n            <span style=\\\"overflow: hidden;\\\" *ngIf=\\\"region.deaths\\\">\\n              | Deaths: {{region.deaths | number}}\\n            </span>\\n          </p>\\n        </ion-label>\\n      </ion-card-content>\\n    </ion-card>\\n  </ion-list>\\n</ion-content>\"","\nimport { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { RegionsPage } from './regions.page';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    Ng2SearchPipeModule,\n    RouterModule.forChild([{ path: '', component: RegionsPage }])\n  ],\n  declarations: [RegionsPage]\n})\nexport class RegionsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lvbnMvcmVnaW9ucy5wYWdlLnNjc3MifQ== */\"","import { Component } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription, interval } from 'rxjs';\nimport { CovidService } from '../covid.service';\n\n@Component({\n  selector: 'app-regions',\n  templateUrl: './regions.page.html',\n  styleUrls: ['./regions.page.scss'],\n})\nexport class RegionsPage {\n\n  regions: any = null;\n  searchRegion: any;\n\n  private sub: Subscription;\n  private countryCode = '';\n\n  constructor(private route: ActivatedRoute, private covidService: CovidService, public toastController: ToastController, private storage: Storage) { }\n\n  async refreshingToast() {\n    console.log('Refreshing...');\n    const toast = await this.toastController.create({\n      message: 'Refreshing...',\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  createSubscription() {\n    this.sub = interval(300000).subscribe((val) => {\n      this.refreshingToast();\n      this.getData();\n    });\n  }\n\n  deleteSubscription() {\n    this.sub.unsubscribe();\n  }\n\n  getData() {\n    this.covidService.getRegions(this.countryCode).subscribe((data) => {\n      if (data) {\n        this.regions = data;\n        this.storage.set(this.countryCode, data);\n      } else {\n        this.storage.get(this.countryCode).then((val) => {\n          this.regions = val;\n        });\n      }\n    });\n  }\n\n  ionViewWillEnter() {\n    this.countryCode = this.route.snapshot.paramMap.get('id');\n    this.getData();\n    this.createSubscription();\n  }\n\n  ionViewDidLeave() {\n    this.deleteSubscription();\n  }\n\n  doRefresh(event) {\n    this.refreshingToast();\n    this.getData();\n\n    setTimeout(() => {\n      console.log('Async operation has ended');\n      event.target.complete();\n    }, 2000);\n  }\n}\n"],"sourceRoot":"webpack:///"}