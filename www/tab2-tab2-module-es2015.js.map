{"version":3,"sources":["./src/app/tab2/tab2.page.html","./src/app/tab2/tab2.module.ts","./src/app/tab2/tab2.page.scss","./src/app/tab2/tab2.page.ts"],"names":[],"mappings":"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","file":"tab2-tab2-module-es2015.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-title>\\r\\n      COVID-19 by Country\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-toolbar>\\r\\n  <ion-searchbar [(ngModel)]=\\\"searchCountry\\\" autocomplete=\\\"off\\\"></ion-searchbar>\\r\\n</ion-toolbar>\\r\\n\\r\\n<ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\">\\r\\n  <ion-fab-button size='small' (click)=\\\"goToTop()\\\">\\r\\n    <ion-icon name=\\\"arrow-up\\\"></ion-icon>\\r\\n  </ion-fab-button>\\r\\n</ion-fab>\\r\\n\\r\\n<ion-content [fullscreen]=\\\"true\\\" #listScroll>\\r\\n\\r\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\r\\n    <ion-refresher-content></ion-refresher-content>\\r\\n  </ion-refresher>\\r\\n\\r\\n  <ion-list>\\r\\n    <div *ngFor=\\\"let country of countries | filter:searchCountry\\\">\\r\\n      <ion-card *ngIf=\\\"regions.indexOf(country.country) == -1\\\" lines=\\\"none\\\" class=\\\"ion-no-padding\\\">\\r\\n        <ion-card-header>\\r\\n          <ion-card-title>\\r\\n            {{country.country}}\\r\\n          </ion-card-title>\\r\\n        </ion-card-header>\\r\\n        <ion-card-content>\\r\\n          <ion-avatar *ngIf=\\\"country.flag\\\" style=\\\"float: left; margin-right:1em;\\\" slot=\\\"start\\\">\\r\\n            <img src=\\\"../assets/flags-countries/{{country.flag}}.svg\\\" />\\r\\n          </ion-avatar>\\r\\n          <ion-label>\\r\\n            <p style=\\\"overflow: hidden;\\\">\\r\\n              Cases: {{country.cases | number}} | Today: {{country.todayCases | number}}<br>\\r\\n              Active: {{country.active | number}}<br>\\r\\n              Deaths: {{country.deaths | number}} | Today: {{country.todayDeaths | number}}<br>\\r\\n              Recovered: {{country.recovered | number}} | Critical {{country.critical | number}}<br>\\r\\n            </p>\\r\\n          </ion-label>\\r\\n\\r\\n          <ion-button shape=\\\"round\\\" size=\\\"small\\\" color=\\\"medium\\\" *ngIf=\\\"historicalCountryList[country.isoCode]\\\"\\r\\n            (click)='getHistoricalData(country.isoCode)' style=\\\"float: left; margin-bottom: 1rem; margin-top: .5rem;\\\">\\r\\n            Analytics\\r\\n          </ion-button>\\r\\n\\r\\n          <ion-button shape=\\\"round\\\" size=\\\"small\\\" color=\\\"primary\\\" *ngIf=\\\"country.hasRegionalData\\\"\\r\\n            (click)='getRegions(country.isoCode)'\\r\\n            style=\\\"float: left; margin-left: 1rem; margin-bottom: 1rem; margin-top: .5rem;\\\">\\r\\n            Regions\\r\\n          </ion-button>\\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n    </div>\\r\\n  </ion-list>\\r\\n</ion-content>\"","import { IonicModule } from '@ionic/angular';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\nimport { Tab2Page } from './tab2.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    IonicModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    Ng2SearchPipeModule,\r\n    RouterModule.forChild([{ path: '', component: Tab2Page }])\r\n  ],\r\n  declarations: [Tab2Page]\r\n})\r\nexport class Tab2PageModule {}\r\n","export default \"ion-content ion-toolbar {\\n  --background: translucent;\\n}\\n\\nion-card {\\n  margin-bottom: 0px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFiMi9DOlxcVXNlcnNcXE5pam9cXFByb2plY3RzXFxDb3ZpZC0xOS1BUElcXGZyb250ZW5kL3NyY1xcYXBwXFx0YWIyXFx0YWIyLnBhZ2Uuc2NzcyIsInNyYy9hcHAvdGFiMi90YWIyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHlCQUFBO0FDQ0Y7O0FERUE7RUFDRSw2QkFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvdGFiMi90YWIyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jb250ZW50IGlvbi10b29sYmFyIHtcclxuICAtLWJhY2tncm91bmQ6IHRyYW5zbHVjZW50O1xyXG59XHJcblxyXG5pb24tY2FyZHtcclxuICBtYXJnaW4tYm90dG9tOiAwcHggIWltcG9ydGFudDtcclxufSIsImlvbi1jb250ZW50IGlvbi10b29sYmFyIHtcbiAgLS1iYWNrZ3JvdW5kOiB0cmFuc2x1Y2VudDtcbn1cblxuaW9uLWNhcmQge1xuICBtYXJnaW4tYm90dG9tOiAwcHggIWltcG9ydGFudDtcbn0iXX0= */\"","import { Component, ViewChild } from '@angular/core';\r\nimport { ToastController, NavController, IonContent } from '@ionic/angular';\r\nimport { Storage } from '@ionic/storage';\r\nimport { Subscription, interval } from 'rxjs';\r\nimport { CovidService } from '../covid.service';\r\n\r\n@Component({\r\n  selector: 'app-tab2',\r\n  templateUrl: 'tab2.page.html',\r\n  styleUrls: ['tab2.page.scss']\r\n})\r\nexport class Tab2Page {\r\n  @ViewChild('listScroll', { static: false }) private listScroll: IonContent;\r\n\r\n\r\n  countries: any = null;\r\n  historicalCountryList: any = null;\r\n  searchCountry: any;\r\n  private sub: Subscription;\r\n  private regions = ['World', 'Europe', 'North America', 'Asia', 'South America', 'Africa', 'Oceania', 'Total:', ''];\r\n\r\n  constructor(private covidService: CovidService, public toastController: ToastController, private storage: Storage, private navCtrl: NavController) { }\r\n\r\n  async createToast(msg: string) {\r\n    console.log(msg);\r\n    const toast = await this.toastController.create({\r\n      message: msg,\r\n      duration: 2000\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n  getRegions(countryCode: string) {\r\n    this.navCtrl.navigateForward(`/tabs/tab2/regions/${countryCode}`);\r\n  }\r\n\r\n  getHistoricalData(countryCode: string) {\r\n    this.navCtrl.navigateForward(`/tabs/tab2/history/${countryCode}`);\r\n  }\r\n\r\n  createSubscription() {\r\n    this.sub = interval(300000).subscribe((val) => {\r\n      this.createToast('Refreshing...');\r\n      this.getData();\r\n    });\r\n  }\r\n\r\n  deleteSubscription() {\r\n    this.sub.unsubscribe();\r\n  }\r\n\r\n  getData() {\r\n    this.covidService.getCountries().subscribe((data) => {\r\n      if (data) {\r\n        this.countries = data;\r\n        this.storage.set('countries', data);\r\n      } else {\r\n        this.storage.get('countries').then((val) => {\r\n          this.countries = val;\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  getTimeSeriesCountryList() {\r\n    this.covidService.getTimeSeries().subscribe((data) => {\r\n      if (data) {\r\n        this.historicalCountryList = data;\r\n        this.storage.set('historical-country-list', data);\r\n      } else {\r\n        this.storage.get('historical-country-list').then((val) => {\r\n          this.historicalCountryList = val;\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  goToTop() {\r\n    this.listScroll.scrollToTop(500);\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.getData();\r\n    this.getTimeSeriesCountryList();\r\n    this.createSubscription();\r\n  }\r\n\r\n  ionViewDidLeave() {\r\n    this.deleteSubscription();\r\n  }\r\n\r\n  doRefresh(event) {\r\n    this.createToast('Refreshing...');\r\n    this.getData();\r\n\r\n    setTimeout(() => {\r\n      console.log('Async operation has ended');\r\n      event.target.complete();\r\n    }, 2000);\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}