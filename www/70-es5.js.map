{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-textarea-ios.entry.js"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,cAAA,EAAA,YAAA;AAAA,aAAA,QAAA;AAAA,KAAA;AAAA;;;AAAA,QAAA,8CAAA,GAAA,mBAAA;AAAA;AAAA,0DAAA,CAAA;AAAA;;;AAAA,QAAA,gDAAA,GAAA,mBAAA;AAAA;AAAA,4DAAA,CAAA;AAAA;;;AAAA,QAAA,iDAAA,GAAA,mBAAA;AAAA;AAAA,6DAAA,CAAA;AAAA;;;AAAA,QAAA,+CAAA,GAAA,mBAAA;AAAA;AAAA,2DAAA,CAAA;;AAKA,UAAA,QAAA,GAAA,MAAA;AACA,MAAA,WAAA,CAAA,OAAA,EAAA;AACQ,QAAA,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAgB,IAAhB,EAAgB,OAAhB;AACR,aAAA,OAAA,uBAAoC,WAAA,EAApC;AACA,aAAA,gBAAA,GAAA,KAAA;AACA,aAAA,QAAA,GAAA,KAAA;AACA;;;;AAGA,aAAA,cAAA,GAAA,MAAA;AACA;;;;AAGA,aAAA,SAAA,GAAA,KAAA;AACA;;;;AAGA,aAAA,WAAA,GAAA,KAAA;AACA;;;;AAGA,aAAA,QAAA,GAAA,CAAA;AACA;;;;AAGA,aAAA,QAAA,GAAA,KAAA;AACA;;;;AAGA,aAAA,IAAA,GAAA,KAAA,OAAA;AACA;;;;AAGA,aAAA,QAAA,GAAA,KAAA;AACA;;;;AAGA,aAAA,QAAA,GAAA,KAAA;AACA;;;;AAGA,aAAA,UAAA,GAAA,KAAA;AACA;;;;AAGA,aAAA,QAAA,GAAA,KAAA;AACA;;;;AAGA,aAAA,KAAA,GAAA,EAAA;;AACA,aAAA,OAAA,GAAA,EAAA,IAAA;AACA,cAAA,KAAA,WAAA,EAAA;AACA,iBAAA,KAAA,GAAA,KAAA,WAAA,CAAA,KAAA;AACA;;AACA,eAAA,SAAA;AACA,eAAA,QAAA,CAAA,IAAA,CAAA,EAAA;AACA,SANA;;AAOA,aAAA,OAAA,GAAA,MAAA;AACA,eAAA,QAAA,GAAA,IAAA;AACA,eAAA,WAAA;AACA,eAAA,QAAA,CAAA,IAAA;AACA,SAJA;;AAKA,aAAA,MAAA,GAAA,MAAA;AACA,eAAA,QAAA,GAAA,KAAA;AACA,eAAA,WAAA;AACA,eAAA,OAAA,CAAA,IAAA;AACA,SAJA;;AAKA,aAAA,SAAA,GAAA,MAAA;AACA,eAAA,gBAAA;AACA,SAFA;;AAGA,aAAA,SAAA,GAAyB,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAW,IAAX,EAAW,WAAX,EAAW,CAAX,CAAzB;AACA,aAAA,QAAA,GAAwB,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAW,IAAX,EAAW,UAAX,EAAW,CAAX,CAAxB;AACA,aAAA,QAAA,GAAwB,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAW,IAAX,EAAW,UAAX,EAAW,CAAX,CAAxB;AACA,aAAA,OAAA,GAAuB,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAW,IAAX,EAAW,SAAX,EAAW,CAAX,CAAvB;AACA,aAAA,QAAA,GAAwB,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAW,IAAX,EAAW,UAAX,EAAW,CAAX,CAAxB;AACA;;AACA,MAAA,eAAA,GAAA;AACA,aAAA,SAAA,GAAyB,MAAA,CAAA,iDAAA,CAAA,GAAA,CAAA,CAAA,CAAa,KAAA,SAAb,EAAa,KAAA,QAAb,CAAzB;AACA;;AACA,MAAA,eAAA,GAAA;AACA,aAAA,SAAA;AACA;AACA;;;;;AAGA,MAAA,YAAA,GAAA;AACA,cAAA,WAAA,GAAA,KAAA,WAAA;AACA,cAAA,KAAA,GAAA,KAAA,QAAA,EAAA;;AACA,YAAA,WAAA,IAAA,WAAA,CAAA,KAAA,KAAA,KAAA,EAAA;AACA,UAAA,WAAA,CAAA,KAAA,GAAA,KAAA;AACA;;AACA,aAAA,WAAA;AACA,aAAA,SAAA;AACA,aAAA,SAAA,CAAA,IAAA,CAAA;AAA6B,UAAA;AAA7B,SAAA;AACA;;AACA,MAAA,iBAAA,GAAA;AACA,aAAA,SAAA;AACA,aAAA,eAAA;AACA;AACA,eAAA,EAAA,CAAA,aAAA,CAAA,IAAA,WAAA,CAAA,iBAAA,EAAA;AACA,YAAA,MAAA,EAAA,KAAA;AADA,WAAA,CAAA;AAGA;AACA;;AACA,MAAA,oBAAA,GAAA;AACA;AACA,UAAA,QAAA,CAAA,aAAA,CAAA,IAAA,WAAA,CAAA,mBAAA,EAAA;AACA,YAAA,MAAA,EAAA,KAAA;AADA,WAAA,CAAA;AAGA;AACA;;AACA,MAAA,gBAAA,GAAA;AACA,aAAA,WAAA;AACA,OAjHA,CAkHA;;;AACA,MAAA,WAAA,GAAA;AACA,cAAA,WAAA,GAAA,KAAA,WAAA;;AACA,YAAA,WAAA,IAAA,KAAA,QAAA,EAAA;AACY,UAAA,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAQ,MAAA;AACpB,YAAA,WAAA,CAAA,KAAA,CAAA,MAAA,GAAA,SAAA;AACA,YAAA,WAAA,CAAA,KAAA,CAAA,MAAA,GAAA,WAAA,CAAA,YAAA,GAAA,IAAA;AACa,WAHD;AAIZ;AACA;AACA;;;;;;AAIA,YAAA,QAAA,GAAA;AACA,YAAA,KAAA,WAAA,EAAA;AACA,eAAA,WAAA,CAAA,KAAA;AACA;AACA;AACA;;;;;AAGA,MAAA,eAAA,GAAA;AACA,eAAA,OAAA,CAAA,OAAA,CAAA,KAAA,WAAA,CAAA;AACA;;AACA,MAAA,SAAA,GAAA;AACA,aAAA,QAAA,CAAA,IAAA,CAAA;AACA,yBAAA,IADA;AAEA,sBAAA,IAFA;AAGA,mBAAA,IAHA;AAIA,kCAAA,KAAA,QAJA;AAKA,6BAAA,KAAA,WAAA,IAAA,IALA;AAMA,uBAAA,KAAA,QAAA,EANA;AAOA,uBAAA,KAAA;AAPA,SAAA;AASA;AACA;;;;;AAGA,MAAA,gBAAA,GAAA;AACA,YAAA,CAAA,KAAA,WAAA,EAAA;AACA;AACA,SAHA,CAIA;;;AACA,YAAA,KAAA,gBAAA,IAAA,KAAA,QAAA,EAAA,EAAA;AACA;AACA,eAAA,KAAA,GAAA,EAAA;AACA,SARA,CASA;;;AACA,aAAA,gBAAA,GAAA,KAAA;AACA;;AACA,MAAA,WAAA,GAAA;AACA;AACA,YAAA,KAAA,WAAA,IAAA,CAAA,KAAA,QAAA,IAAA,KAAA,QAAA,EAAA,EAAA;AACA,eAAA,gBAAA,GAAA,IAAA;AACA;;AACA,aAAA,SAAA;AACA;;AACA,MAAA,QAAA,GAAA;AACA,eAAA,KAAA,QAAA,OAAA,EAAA;AACA;;AACA,MAAA,QAAA,GAAA;AACA,eAAA,KAAA,KAAA,IAAA,EAAA;AACA;;AACA,MAAA,MAAA,GAAA;AACA,cAAA,IAAA,GAAqB,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAU,IAAV,CAArB;AACA,cAAA,KAAA,GAAA,KAAA,QAAA,EAAA;AACA,cAAA,OAAA,GAAA,KAAA,OAAA,GAAA,MAAA;AACA,cAAA,KAAA,GAAsB,MAAA,CAAA,iDAAA,CAAA,GAAA,CAAA,CAAA,CAAa,KAAA,EAAb,CAAtB;;AACA,YAAA,KAAA,EAAA;AACA,UAAA,KAAA,CAAA,EAAA,GAAA,OAAA;AACA;;AACA,eAAgB,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAE,8CAAA,CAAA,GAAA,CAAF,EAAM;AAAG,2BAAA,KAAA,QAAA,GAAA,MAAA,GAAA,IAAH;AAAG,UAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAwF,MAAA,CAAA,+CAAA,CAAA,GAAA,CAAA,CAAA,CAAkB,KAAA,KAAlB,CAAxF,CAAA,EAA0G;AAAgB,aAAA,IAAA,GAAA;AAAhB,WAA1G;AAAH,SAAN,EAAuJ,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAC,UAAD,EAAC;AAAc,UAAA,KAAA,EAAA,iBAAd;AAAc,UAAA,GAAA,EAAA,EAAA,IAAA,KAAA,WAAA,GAAA,EAAd;AAAc,UAAA,cAAA,EAAA,KAAA,cAAd;AAAc,UAAA,SAAA,EAAA,KAAA,SAAd;AAAc,UAAA,QAAA,EAAA,KAAA,QAAd;AAAc,UAAA,SAAA,EAAA,KAAA,SAAd;AAAc,UAAA,SAAA,EAAA,KAAA,SAAd;AAAc,UAAA,IAAA,EAAA,KAAA,IAAd;AAAc,UAAA,WAAA,EAAA,KAAA,WAAA,IAAA,EAAd;AAAc,UAAA,QAAA,EAAA,KAAA,QAAd;AAAc,UAAA,QAAA,EAAA,KAAA,QAAd;AAAc,UAAA,UAAA,EAAA,KAAA,UAAd;AAAc,UAAA,IAAA,EAAA,KAAA,IAAd;AAAc,UAAA,IAAA,EAAA,KAAA,IAAd;AAAc,UAAA,IAAA,EAAA,KAAA,IAAd;AAAc,UAAA,OAAA,EAAA,KAAA,OAAd;AAAc,UAAA,MAAA,EAAA,KAAA,MAAd;AAAc,UAAA,OAAA,EAAA,KAAA,OAAd;AAAc,UAAA,SAAA,EAAA,KAAA;AAAd,SAAD,EAAif,KAAjf,CAAvJ,CAAhB;AACA;;AACA,UAAA,EAAA,GAAA;AAAc,eAAQ,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAU,IAAV,CAAR;AAAyB;;AACvC,iBAAA,QAAA,GAAA;AAA2B,eAAA;AAC3B,sBAAA,CAAA,iBAAA,CAD2B;AAE3B,sBAAA,CAAA,iBAAA,CAF2B;AAG3B,mBAAA,CAAA,cAAA;AAH2B,SAAA;AAIrB;;AACN,iBAAA,KAAA,GAAA;AAAwB,eAAA,k8HAAA;AAA28H;;AAlMn+H,KAAA;AAoMA,QAAA,WAAA,GAAA,CAAA","sourcesContent":["import { r as registerInstance, d as createEvent, f as readTask, c as getIonMode, h, H as Host, e as getElement } from './core-0a8d4d2e.js';\nimport './config-3c7f3790.js';\nimport { d as debounceEvent, f as findItemLabel } from './helpers-46f4a262.js';\nimport { c as createColorClasses } from './theme-18cbe2cc.js';\n\nconst Textarea = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.inputId = `ion-input-${textareaIds++}`;\n        this.didBlurAfterEdit = false;\n        this.hasFocus = false;\n        /**\n         * Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.\n         */\n        this.autocapitalize = 'none';\n        /**\n         * This Boolean attribute lets you specify that a form control should have input focus when the page loads.\n         */\n        this.autofocus = false;\n        /**\n         * If `true`, the value will be cleared after focus upon edit. Defaults to `true` when `type` is `\"password\"`, `false` for all other types.\n         */\n        this.clearOnEdit = false;\n        /**\n         * Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke.\n         */\n        this.debounce = 0;\n        /**\n         * If `true`, the user cannot interact with the textarea.\n         */\n        this.disabled = false;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the user cannot modify the value.\n         */\n        this.readonly = false;\n        /**\n         * If `true`, the user must fill in a value before submitting a form.\n         */\n        this.required = false;\n        /**\n         * If `true`, the element will have its spelling and grammar checked.\n         */\n        this.spellcheck = false;\n        /**\n         * If `true`, the element height will increase based on the value.\n         */\n        this.autoGrow = false;\n        /**\n         * The value of the textarea.\n         */\n        this.value = '';\n        this.onInput = (ev) => {\n            if (this.nativeInput) {\n                this.value = this.nativeInput.value;\n            }\n            this.emitStyle();\n            this.ionInput.emit(ev);\n        };\n        this.onFocus = () => {\n            this.hasFocus = true;\n            this.focusChange();\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.hasFocus = false;\n            this.focusChange();\n            this.ionBlur.emit();\n        };\n        this.onKeyDown = () => {\n            this.checkClearOnEdit();\n        };\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionInput = createEvent(this, \"ionInput\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    }\n    debounceChanged() {\n        this.ionChange = debounceEvent(this.ionChange, this.debounce);\n    }\n    disabledChanged() {\n        this.emitStyle();\n    }\n    /**\n     * Update the native input element when the value changes\n     */\n    valueChanged() {\n        const nativeInput = this.nativeInput;\n        const value = this.getValue();\n        if (nativeInput && nativeInput.value !== value) {\n            nativeInput.value = value;\n        }\n        this.runAutoGrow();\n        this.emitStyle();\n        this.ionChange.emit({ value });\n    }\n    connectedCallback() {\n        this.emitStyle();\n        this.debounceChanged();\n        {\n            this.el.dispatchEvent(new CustomEvent('ionInputDidLoad', {\n                detail: this.el\n            }));\n        }\n    }\n    disconnectedCallback() {\n        {\n            document.dispatchEvent(new CustomEvent('ionInputDidUnload', {\n                detail: this.el\n            }));\n        }\n    }\n    componentDidLoad() {\n        this.runAutoGrow();\n    }\n    // TODO: performance hit, this cause layout thrashing\n    runAutoGrow() {\n        const nativeInput = this.nativeInput;\n        if (nativeInput && this.autoGrow) {\n            readTask(() => {\n                nativeInput.style.height = 'inherit';\n                nativeInput.style.height = nativeInput.scrollHeight + 'px';\n            });\n        }\n    }\n    /**\n     * Sets focus on the specified `ion-textarea`. Use this method instead of the global\n     * `input.focus()`.\n     */\n    async setFocus() {\n        if (this.nativeInput) {\n            this.nativeInput.focus();\n        }\n    }\n    /**\n     * Returns the native `<textarea>` element used under the hood.\n     */\n    getInputElement() {\n        return Promise.resolve(this.nativeInput);\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            'interactive': true,\n            'textarea': true,\n            'input': true,\n            'interactive-disabled': this.disabled,\n            'has-placeholder': this.placeholder != null,\n            'has-value': this.hasValue(),\n            'has-focus': this.hasFocus\n        });\n    }\n    /**\n     * Check if we need to clear the text input if clearOnEdit is enabled\n     */\n    checkClearOnEdit() {\n        if (!this.clearOnEdit) {\n            return;\n        }\n        // Did the input value change after it was blurred and edited?\n        if (this.didBlurAfterEdit && this.hasValue()) {\n            // Clear the input\n            this.value = '';\n        }\n        // Reset the flag\n        this.didBlurAfterEdit = false;\n    }\n    focusChange() {\n        // If clearOnEdit is enabled and the input blurred but has a value, set a flag\n        if (this.clearOnEdit && !this.hasFocus && this.hasValue()) {\n            this.didBlurAfterEdit = true;\n        }\n        this.emitStyle();\n    }\n    hasValue() {\n        return this.getValue() !== '';\n    }\n    getValue() {\n        return this.value || '';\n    }\n    render() {\n        const mode = getIonMode(this);\n        const value = this.getValue();\n        const labelId = this.inputId + '-lbl';\n        const label = findItemLabel(this.el);\n        if (label) {\n            label.id = labelId;\n        }\n        return (h(Host, { \"aria-disabled\": this.disabled ? 'true' : null, class: Object.assign(Object.assign({}, createColorClasses(this.color)), { [mode]: true }) }, h(\"textarea\", { class: \"native-textarea\", ref: el => this.nativeInput = el, autoCapitalize: this.autocapitalize, autoFocus: this.autofocus, disabled: this.disabled, maxLength: this.maxlength, minLength: this.minlength, name: this.name, placeholder: this.placeholder || '', readOnly: this.readonly, required: this.required, spellCheck: this.spellcheck, cols: this.cols, rows: this.rows, wrap: this.wrap, onInput: this.onInput, onBlur: this.onBlur, onFocus: this.onFocus, onKeyDown: this.onKeyDown }, value)));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"debounce\": [\"debounceChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"value\": [\"valueChanged\"]\n    }; }\n    static get style() { return \".sc-ion-textarea-ios-h{--background:initial;--color:initial;--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--border-radius:0;display:block;position:relative;-ms-flex:1;flex:1;width:100%;-webkit-box-sizing:border-box;box-sizing:border-box;background:var(--background);color:var(--color);font-family:var(--ion-font-family,inherit);white-space:pre-wrap;z-index:2}.ion-color.sc-ion-textarea-ios-h{background:initial;color:var(--ion-color-base)}ion-item.sc-ion-textarea-ios-h, ion-item .sc-ion-textarea-ios-h{-ms-flex-item-align:baseline;align-self:baseline}ion-item.sc-ion-textarea-ios-h:not(.item-label), ion-item:not(.item-label) .sc-ion-textarea-ios-h{--padding-start:0}.native-textarea.sc-ion-textarea-ios{border-radius:var(--border-radius);margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:block;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;resize:none;-webkit-appearance:none;-moz-appearance:none;appearance:none}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.native-textarea.sc-ion-textarea-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-textarea.sc-ion-textarea-ios::-webkit-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::-moz-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios:-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea[disabled].sc-ion-textarea-ios{opacity:.4}.cloned-input.sc-ion-textarea-ios{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-textarea-ios-h .cloned-input.sc-ion-textarea-ios, [dir=rtl] .sc-ion-textarea-ios-h .cloned-input.sc-ion-textarea-ios, [dir=rtl].sc-ion-textarea-ios .cloned-input.sc-ion-textarea-ios{left:unset;right:unset;right:0}.sc-ion-textarea-ios-h{--padding-top:10px;--padding-end:10px;--padding-bottom:10px;--padding-start:0;font-size:inherit}.item-label-floating.sc-ion-textarea-ios-h, .item-label-floating .sc-ion-textarea-ios-h, .item-label-stacked.sc-ion-textarea-ios-h, .item-label-stacked .sc-ion-textarea-ios-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0px}\"; }\n};\nlet textareaIds = 0;\n\nexport { Textarea as ion_textarea };\n"],"sourceRoot":"webpack:///","file":"70-es5.js"}